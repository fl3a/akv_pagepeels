<?php
// $Id$

/**
 * @file
 * Displays a pagepeel for the german movement against "Vorratsdatenspeicherung" aka AKV, http://www.vorratsdatenspeicherung.de
 * HTML/CSS coding by www.dataloo.de (Schrift/Abbildung: Parole von http://www.dataloo.de)
 */

/**
 * Display help and module information
 * @param section which section of the site we're displaying help
 * @return help text for section
 */
function akv_pagepeels_help($section='') {
  
$output = '';

  switch ($section) {
    case "admin/help#akv_pagepeels":
      $output = t("Displays the !online-demo-pagepeel of !AKV at the right upper corner of your site.", 
        array(
          '!online-demo-pagepeel' =>
          l('online demo pagepeel',
            'http://wiki.vorratsdatenspeicherung.de/Online-Demo#Pagepeel', NULL, NULL, NULL, TRUE  
          ),
          '!AKV' => 
          l('Arbeitskreises Vorratsdatenspeicherung', 
            'http://vorratsdatenspeicherung.de/', NULL, NULL, NULL, TRUE  
          )
        )
      );
      break;
  }
  return $output;
}

/**
 * Implementation of hook_perm().
 */
function akv_pagepeels_perm() {
  return array('administer akv_pagepeels');
}


/**
 * Implementation of hook_menu().
 */
function akv_pagepeels_menu() {

  $items = array();

  $items[] = array(
    'path' => 'admin/settings/akv_pagepeels',
    'title' => t('AKV pagepeels'),
    'description' => t('Settings for AKV Pagepeel'),
    'callback' => 'drupal_get_form',
    'callback arguments' => 'akv_pagepeels_admin',
    'access' => user_access('administer akv_pagepeels'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_admin
 */
function akv_pagepeels_admin(){
  $form['type'] = array (    
    '#title' => t('Pagepeel type'),
    '#description' => t('Choose the type of collapsed pagepeel'),
    '#type' => 'radios',
    '#default_value' => variable_get('akv_type','latest'),
    '#options' => array(
      'latest' => t('Latest pagepeel from AKV, default'),
      'schaeuble' => t('Stasi 2.0 classic'),
  	  'schaeuble_green' => t('Stasi 2.0 green'),
      'cam' => t('Surveilance camera(2D)'),
      '3d_cam' => t('Surveilance camera(3D)'),
      'ani_cam' => t('Surveilance camera(3D + animated'),
      'trauer' => t('Condolement, 1949 - 2007 t'),
    )
  );
  $form['info'] = array (
    '#title' => t('Show info'),
    '#description' => t('Show info icon under the pagepeel'),
    '#type' => 'radios',
    '#default_value' => variable_get('akv_info', 'on'),
    '#options' => array (
        'on' => t('Show'),
        'off' => t('DonÂ´t shown'),
      )
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_admin_submit()
 *  
 * @param form_id ID of the passed form
 * @param form_values Values of the passed form
 */
function akv_pagepeels_admin_submit($form_id, $form_values) {

  if($form_values['op'] == t('Save configuration')){
    variable_set('akv_type', $form_values['type']);
    variable_set('akv_info', $form_values['info']);
    switch($form_values['type']) {
    case "latest":
      variable_set('akv_css','/css/akv_pagepeels_latest.css');
      break;        
    case "schaeuble":
      variable_set('akv_css','/css/akv_pagepeels_schaeuble.css');
	    break;
	case "schaeuble_green":
      variable_set('akv_css','/css/akv_pagepeels_schaeuble_green.css');
	    break;
    case "cam":
      variable_set('akv_css','/css/akv_pagepeels_cam.css');
	    break;
    case "3d_cam":
      variable_set('akv_css','/css/akv_pagepeels_3d_cam.css');
	    break;
    case "ani_cam":
      variable_set('akv_css','/css/akv_pagepeels_ani_cam.css');
	    break;
    case "trauer":    
	  variable_set('akv_css','/css/akv_pagepeels_trauer.css');
    }
    if($form_values['info'] == 'on'){
      variable_set('akv_html','/html/akv_pagepeels.html'); 
    } 
    else {
      variable_set('akv_html','/html/akv_pagepeels_no_info.html'); 
    }
    drupal_set_message(t('The configuration options have been saved.'));
    drupal_set_message(
      t('You are now attending at the !Demo, !here you can create a new entry if you want to get listed at the !attending-sites.',
        array('!Demo' =>
          l(t('Online Demo'), 'http://wiki.vorratsdatenspeicherung.de/Online-Demo', 
            NULL, NULL, NULL, TRUE
          ),
          '!here' => 
          l(t('here') , 'http://wiki.vorratsdatenspeicherung.de/Diskussion:Online-Demo/Teilnehmende_Websites#Neueintrag',
            NULL, NULL, NULL, TRUE        
          ), 
          '!attending-sites' =>
          l(t('attending sites'), 'http://wiki.vorratsdatenspeicherung.de/Online-Demo/Teilnehmende_Websites',
            NULL, NULL, NULL, TRUE
          ),                 
        )
      )
    );
  }
  else { 
    variable_set('akv_type', 'latest');
    variable_set('akv_info', 'on');
    variable_set('akv_html','/html/akv_pagepeels.html'); 
    variable_set('akv_css', '/css/akv_pagepeels_latest.css');
    drupal_set_message(t('The configuration options have been resetted.'));
  }
}

/**
 * Implementation of hook_footer()
 * 
 * This hook enables modules to insert HTML just before the </body> closing tag of web pages. 
 * This is useful for including javascript code and for outputting debug information.
 * @param main Whether the current page is the front page of the site.
 */
function akv_pagepeels_footer($main = 0) {
  drupal_add_css(drupal_get_path('module', 'akv_pagepeels') .'/css/akv_pagepeels_expanded.css');
  drupal_add_css(drupal_get_path('module', 'akv_pagepeels') . variable_get('akv_css',''));
  drupal_set_html_head(file_get_contents(drupal_get_path('module', 'akv_pagepeels') . '/html/browsersniff.html'));
  return file_get_contents(drupal_get_path('module', 'akv_pagepeels') . variable_get('akv_html',''));
}
